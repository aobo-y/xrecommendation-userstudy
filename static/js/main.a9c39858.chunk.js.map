{"version":3,"sources":["App.module.css","Main/InputSlider.module.css","Main/index.module.css","Main/InputSlider.js","Main/QuestionItem.js","lib/user.js","lib/item.js","Main/QuestionList.js","Main/ItemList.js","lib/scenarios.js","Main/ContextModal.js","Main/SurveyModal.js","lib/surveys.js","Main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","logo","content","footer","profile","wrapper","row","icon","InputSlider","react_default","a","createElement","className","styles","gutter","col","span","type","slider","this","props","input_number","Component","defaultProps","min","max","value","SliderAnswer","_ref","submitted","onChange","onConfirm","onUnknown","Fragment","Main_InputSlider","es_button","onClick","style","marginLeft","RadioAnswer","_ref2","answer","onLike","onDislike","QuestionItem","state","_this","setState","onSubmit","_this$props","id","feature","splitValue","question","concat","QuestionItem_SliderAnswer","QuestionItem_RadioAnswer","PureComponent","nodes","itemList","itemNodes","itemVectors","randomExp","noLeafItemNodes","QuestionList","questions","list","itemLayout","size","dataSource","rowKey","renderItem","idx","Item","Main_QuestionItem","v","renderEmpty","empty","description","Images","urls","width","carousel","autoplay","map","url","key","textAlign","height","src","objectFit","alt","ItemList","items","onExpand","config_provider","length","item","extra","images","ItemList_Images","undefined","Meta","title","href","target","rel","name","tags","tag","es_tag","color","marginBottom","Boolean","exp","collapse","defaultActiveKey","bordered","Panel","header","marginRight","border","join","scenarios","model","random","ContextModal","dataset","scenario","onDatasetChange","e","onScenarioChange","Object","objectSpread","mapScenarioToStr","step","_this2","visible","_this$state","modal","closable","es_form","label","es_radio","Group","Button","es_select","s","Option","SurveyModel","survey","allNodes","amazon","FMF","FacT","yelp","getNodeById","user","setContext","set","getRoot","nextNode","nodeId","nextId","node","_node$splitValue","gtId","nGtId","unknownId","allData","vectors","amazonFmfVectorsData","amazonMFCTNodes","amazonMFCTVectorsData","amazonList","yelpFmfVectorsData","yelpMFCTVectorsData","yelpList","getNode","genRandomExp","_","filter","isLeaf","Math","floor","genExp","childNode","parentId","str","push","lib_item","math","matrix","getTopKItems","vector","k","idxResult","multiply","toArray","queue","TinyQueue","b","pop","surveys","getSurvey","ITEM_NUM","Main","userNodes","context","expExpanded","stepEnd","_qs$parse","qs","parse","window","location","search","verifyContext","Number","resetStepContext","showWarning","startTime","Date","includes","onContextSubmit","history","pushState","stringify","_this$state$context","_scenarios$scenario$s","userTree","itemTree","newNode","toConsumableArray","showNotification","onExpExpand","getSteps","onFinishStep","steps","notification","success","duration","message","warning","_this$state2","es_steps","current","Step","String","fromCharCode","es_alert","showIcon","xs","sm","md","lg","xl","card","Main_QuestionList","Main_ItemList","Main_ContextModal","SurveyModal","Header","Layout","Content","Footer","shortid","generate","App","layout","src_Main","onEnd","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a9c39858.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"App_logo__elMXE\",\"content\":\"App_content__LmUge\",\"footer\":\"App_footer__KIdaO\",\"profile\":\"App_profile__3Et-A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"InputSlider_wrapper__ygcor\",\"row\":\"InputSlider_row__EMO3h\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Main_icon__2OTfa\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Slider, Row, Col, InputNumber, Icon } from 'antd';\n\nimport styles from './InputSlider.module.css';\n\nclass InputSlider extends Component {\n  static propTypes = {\n    min: PropTypes.number,\n    max: PropTypes.number,\n    value: PropTypes.number,\n    onChange: PropTypes.func.isRequired\n  }\n\n  static defaultProps = {\n    min: 1,\n    max: 100,\n    value: 50\n  }\n\n  render() {\n    return (\n      <Row className={styles.row} gutter={16}>\n        <Col span={14}>\n          <div className={styles.wrapper}>\n            <Icon type=\"frown-o\" />\n            <Slider\n              {...this.props}\n            />\n            <Icon type=\"smile-o\" />\n          </div>\n        </Col>\n        <Col span={10}>\n          <InputNumber\n            {...this.props}\n          />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default InputSlider;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\n\nimport InputSlider from './InputSlider';\n\nconst SliderAnswer = ({\n  value,\n  submitted,\n  onChange,\n  onConfirm,\n  onUnknown\n}) => {\n  if (submitted) {\n    return <p>Answer: <strong>{value < 0 ? 'Don\\'t know' : value}</strong></p>\n  }\n\n  return (\n    <>\n      <InputSlider value={value} onChange={onChange} />\n      <Button type=\"primary\" onClick={onConfirm}>Confirm</Button>\n      <Button style={{marginLeft: 10}} onClick={onUnknown}>I don't Know</Button>\n    </>\n  );\n}\n\n\nconst RadioAnswer = ({\n  value,\n  submitted,\n  onLike,\n  onDislike,\n  onUnknown\n}) => {\n  if (submitted) {\n    let answer;\n    if (value === 0) {\n      answer = 'Dislike';\n    } else if (value > 0) {\n      answer = 'Like';\n    } else {\n      answer = 'Don\\'t know';\n    }\n\n    return <p>Answer: <strong>{answer}</strong></p>\n   }\n\n   return (\n    <>\n      <Button type=\"primary\" onClick={onLike}>Like</Button>\n      <Button type=\"primary\" style={{marginLeft: 10}} onClick={onDislike}>Dislike</Button>\n      <Button style={{marginLeft: 10}} onClick={onUnknown}>I don't Know</Button>\n    </>\n  );\n}\n\nclass QuestionItem extends PureComponent {\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    feature: PropTypes.string.isRequired,\n    question: PropTypes.string,\n    splitValue: PropTypes.number,\n    submitted: PropTypes.bool,\n    onSubmit: PropTypes.func\n  }\n\n  static defaultProps = {\n    question: null,\n    splitValue: null,\n    submitted: false\n  }\n\n  state = {\n    value: 50,\n    submitted: false\n  }\n\n  onChange = (value) => {\n    this.setState({\n      value: value,\n    });\n  }\n\n  onConfirm = () => {\n    this.props.onSubmit(this.state.value);\n  }\n\n  onUnknown = () => {\n    this.setState({\n      value: -1\n    });\n    this.props.onSubmit(-1);\n  }\n\n  onLike = () => {\n    this.setState({\n      value: 100\n    });\n    this.props.onSubmit(100);\n  }\n\n  onDislike = () => {\n    this.setState({\n      value: 0\n    });\n    this.props.onSubmit(0);\n  }\n\n  render() {\n    const {id, feature, submitted, splitValue, question} = this.props;\n    const { value } = this.state;\n\n    return (\n      <>\n        <p>Q{id}. {question || `How much do you like ${feature}?`}</p>\n        {\n          splitValue ?\n            <SliderAnswer\n              value={value}\n              submitted={submitted}\n              onChange={this.onChange}\n              onConfirm={this.onConfirm}\n              onUnknown={this.onUnknown}\n            /> :\n            <RadioAnswer\n              value={value}\n              submitted={submitted}\n              onLike={this.onLike}\n              onDislike={this.onDislike}\n              onUnknown={this.onUnknown}\n            />\n        }\n      </>\n    );\n  }\n}\n\nexport default QuestionItem;\n","import amazonFmfNodes from '../data/amazon/fMf/user_nodes.json';\nimport amazonMfctNodes from '../data/amazon/MFCT/user_nodes.json';\nimport yelpFmfNodes from '../data/yelp/fMf/user_nodes.json';\nimport yelpMfctNodes from '../data/yelp/MFCT/user_nodes.json';\n\nconst allNodes = {\n  amazon: {\n    FMF: amazonFmfNodes,\n    FacT: amazonMfctNodes\n  },\n\n  yelp: {\n    FMF: yelpFmfNodes,\n    FacT: yelpMfctNodes\n  }\n};\n\n\nlet nodes;\n\nconst setContext = (set, model) => { nodes = allNodes[set][model] };\n\n// NodeId starts from 1\nconst getNodeById = id => nodes[id - 1]\n\n\nexport const getRoot = () => nodes[0];\n\nexport const nextNode = (nodeId, value) => {\n  const node = getNodeById(nodeId);\n  const { splitValue = 50, gtId, nGtId }  = node;\n\n  let nextId;\n  if (value < 0) {\n    nextId = node.unknownId;\n  } else {\n    nextId = value > splitValue ? gtId : nGtId;\n  }\n  const nextNode = getNodeById(nextId);\n\n  return nextNode;\n}\n\nexport default {\n  setContext,\n\n  getRoot,\n  nextNode\n};\n\n","import math from 'mathjs';\nimport TinyQueue from 'tinyqueue';\n\nimport amazonList from '../data/amazon/item_list';\nimport amazonFmfVectorsData from '../data/amazon/fMf/item_vectors';\nimport amazonMFCTVectorsData from '../data/amazon/MFCT/item_vectors';\nimport amazonMFCTNodes from '../data/amazon/MFCT/item_nodes';\n\nimport yelpList from '../data/yelp/item_list';\nimport yelpFmfVectorsData from '../data/yelp/fMf/item_vectors';\nimport yelpMFCTVectorsData from '../data/yelp/MFCT/item_vectors';\nimport yelpMFCTNodes from '../data/yelp/MFCT/item_nodes';\n\nconst allData = {\n  amazon: {\n    FMF: {vectors: amazonFmfVectorsData},\n    FacT: {\n      nodes: amazonMFCTNodes,\n      vectors: amazonMFCTVectorsData\n    },\n\n    list: amazonList\n  },\n  yelp: {\n    FMF: {vectors: yelpFmfVectorsData},\n    FacT: {\n      nodes: yelpMFCTNodes,\n      vectors: yelpMFCTVectorsData\n    },\n\n    list: yelpList\n  }\n}\n\nlet itemList;\nlet itemNodes;\nlet itemVectors;\nlet randomExp;\n\nconst setContext = (set, model, random) => {\n  itemList = allData[set].list;\n  itemNodes = allData[set][model].nodes;\n  itemVectors = math.matrix(allData[set][model].vectors);\n\n  randomExp = random;\n}\n\nconst getNode = id => itemNodes ? itemNodes[id - 1] : null;\n\nlet noLeafItemNodes;\nconst genRandomExp = exp => {\n  return exp.map(_ => {\n    if (!noLeafItemNodes) {\n      noLeafItemNodes = itemNodes.filter(node => !node.isLeaf);\n    }\n\n    const feature = noLeafItemNodes[Math.floor(Math.random() * noLeafItemNodes.length)].feature;\n    const status = [' is positive', ' is negative', ''][Math.floor(Math.random() * 3)];\n\n    return feature + status;\n  });\n}\n\nconst genExp = id => {\n  const exp = [];\n\n  let childNode = getNode(id);\n\n  if (!childNode) return exp;\n\n  let node = getNode(childNode.parentId);\n\n  while (node) {\n    let str = node.feature;\n    switch (childNode.id) {\n      case node.gtId:\n        str += ' is positive';\n        break;\n\n      case node.nGtId:\n        str += ' is negative';\n        break;\n\n      default:\n        break;\n    }\n    exp.push(str);\n\n    childNode = node;\n    node = node.parentId < 0 ? null : getNode(node.parentId);\n  }\n\n  return exp;\n}\n\n\nexport const getTopKItems = (vector, k) => {\n  const result = math.multiply(itemVectors, vector).toArray();\n\n  const idxResult = result.map((value, idx) => {\n    return {\n      value,\n      idx\n    };\n  });\n\n  const queue = new TinyQueue(idxResult, (a, b) => {\n    return b.value - a.value;\n  });\n\n  const items = [];\n  while (items.length < k) {\n    const { idx } = queue.pop();\n    const item = itemList[idx];\n\n    let exp = genExp(item.parentId);\n    if (randomExp) {\n      exp = genRandomExp(exp);\n    }\n\n    items.push({\n      id: idx,\n      ...item,\n      exp\n    });\n  }\n\n  return items;\n};\n\nexport default {\n  setContext,\n\n  getTopKItems\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { List } from 'antd';\n\nimport QuestionItem from './QuestionItem';\n\nclass QuestionList extends PureComponent {\n  static propTypes = {\n    questions: PropTypes.arrayOf(PropTypes.object),\n    onSubmit: PropTypes.func.isRequired\n  }\n\n  render() {\n    const { questions, onSubmit } = this.props;\n\n    return (\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        dataSource={questions}\n        rowKey=\"id\"\n        renderItem={(question, idx) => (\n          <List.Item>\n            <QuestionItem\n              id={idx + 1}\n              feature={question.feature}\n              question={question.question}\n              splitValue={question.splitValue}\n              submitted={question.submitted}\n              onSubmit={question.submitted ? null : v => onSubmit(question.id, v)}\n            />\n          </List.Item>\n        )}\n      />\n    );\n  }\n}\n\nexport default QuestionList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { List, Tag, Icon, Collapse, Empty, ConfigProvider, Carousel } from 'antd';\n\n\nconst renderEmpty = () => <Empty description=\"Please answer the questions first...\" />\n\nconst Images = ({urls}) => {\n  return (\n    <div style={{width: 252}}>\n      <Carousel autoplay>\n        {\n          urls.map(url => (\n            <div key={url}>\n              <div style={{textAlign: 'center', width: 252, height: 182}}>\n                <img  src={url} style={{width: '100%', height: '100%', objectFit: 'cover'}} alt=\"restaurants\" />\n              </div>\n            </div>\n          ))\n        }\n      </Carousel>\n    </div>\n  )\n}\n\nclass ItemList extends Component {\n  static propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object),\n    onExpand: PropTypes.func.isRequired\n  }\n\n  render() {\n    const { items, onExpand } = this.props;\n\n    return (\n      <ConfigProvider renderEmpty={renderEmpty}>\n        <List\n          itemLayout=\"vertical\"\n          size=\"large\"\n          dataSource={items}\n          footer={<div><b>{items.length}</b> items</div>}\n          rowKey={item => item.id}\n          renderItem={item => (\n            <List.Item\n              extra={item.images ? <Images urls={item.images}/> : undefined}\n            >\n              <List.Item.Meta\n                title={\n                  <a href={item.url} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {item.name}\n                  </a>\n                }\n              />\n              {\n                item.tags.map((tag, idx) =>\n                  <Tag key={idx} color=\"blue\" style={{marginBottom: 6}}>\n                    {tag}\n                  </Tag>\n                )\n              }\n              {\n                Boolean(item.exp.length) && (\n                  <Collapse defaultActiveKey={[]} bordered={false} onChange={onExpand}>\n                    <Collapse.Panel\n                      key=\"1\"\n                      header={<><Icon type=\"solution\" style={{ marginRight: 8 }} />Explanation</>}\n                      style={{border: 0}}\n                    >\n                      <p>{`From your history, we think you will like its features: ${item.exp.join(', ')}`}</p>\n                    </Collapse.Panel>\n                  </Collapse>\n                )\n              }\n            </List.Item>\n          )}\n        />\n      </ConfigProvider>\n    );\n  }\n}\n\nexport default ItemList;\n","const scenarios = [\n  // case 0\n  [\n    {model: 'FMF'},\n    {model: 'FacT', random: false}\n  ],\n\n  // case 1\n  [\n    {model: 'FacT', random: false},\n    {model: 'FMF'}\n  ],\n\n  // case 2\n  [\n    {model: 'FMF'},\n    {model: 'FacT', random: true}\n  ],\n\n  // case 3\n  [\n    {model: 'FacT', random: true},\n    {model: 'FMF'}\n  ],\n\n  // case 4\n  [\n    {model: 'FacT', random: false},\n    {model: 'FacT', random: true}\n  ],\n\n  // case 5\n  [\n    {model: 'FacT', random: true},\n    {model: 'FacT', random: false}\n  ],\n\n  // case 6\n  [\n    {model: 'FacT', random: false}\n  ],\n\n  // case 7\n  [\n    {model: 'FacT', random: true}\n  ],\n\n  // case 8\n  [\n    {model: 'FMF'}\n  ]\n];\n\nexport default scenarios;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Modal, Form, Radio, Button, Select\n} from 'antd';\n\nimport scenarios from '../lib/scenarios';\n\nclass ContextModal extends PureComponent {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onSubmit: PropTypes.func.isRequired\n  }\n\n  state = {\n    dataset: 'yelp',\n    scenario: 0\n  }\n\n  onDatasetChange = e => {\n    this.setState({ dataset: e.target.value });\n  }\n\n  onScenarioChange = v => {\n    this.setState({ scenario: v });\n  }\n\n  onSubmit = () => {\n    this.props.onSubmit({...this.state});\n  }\n\n  mapScenarioToStr = (scenario) => {\n    return scenario.map(step =>  {\n      return step.model + (step.random ? ' (random explanation)' : '');\n    }).join(' vs ');\n  }\n\n  render() {\n    const { visible } = this.props;\n    const { dataset, scenario } = this.state;\n\n    return (\n      <Modal\n        title=\"Choose Context\"\n        visible={visible}\n        footer={null}\n        closable={false}\n      >\n        <Form>\n          <Form.Item\n            label=\"Dataset\"\n          >\n            <Radio.Group value={dataset} onChange={this.onDatasetChange}>\n              <Radio.Button value=\"amazon\">Amazon</Radio.Button>\n              <Radio.Button value=\"yelp\">Yelp</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item\n            label=\"Scenario\"\n          >\n            <Select\n              value={scenario}\n              onChange={this.onScenarioChange}\n              style={{width: 280}}\n            >\n              {\n                scenarios.map((s, idx) => (\n                  <Select.Option key={idx} value={idx}>{idx}. {this.mapScenarioToStr(s)}</Select.Option>\n                ))\n              }\n            </Select>\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default ContextModal;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Modal, Button\n} from 'antd';\n\nclass SurveyModel extends PureComponent {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n    survey: PropTypes.string\n  }\n\n  render() {\n    const { visible, survey } = this.props;\n\n    return (\n      <Modal\n        visible={visible}\n        footer={null}\n        closable={false}\n      >\n        <h2>Thank you!</h2>\n        {survey && <p>Please follow the link below to tell us how you feel about this experience. You will be given the MTurk token to acquire reward there.</p>}\n        {survey && <Button type=\"primary\" href={survey} target=\"_blank\">Survey</Button>}\n      </Modal>\n    );\n  }\n}\n\nexport default SurveyModel;\n","const surveys = {\n  amazon: [\n    'http://koudaigou.net/web/formview/5c4881f3fc918f0bcc2c2f38',\n    'http://yingkebao.top/web/formview/5c488213fc918f0bcc2c2f52',\n    'http://yingkebao.top/web/formview/5c488215fc918f0bcc2c2f54',\n    'http://yingkebao.top/web/formview/5c488217fc918f0bcc2c2f58',\n    'http://yingkebao.top/web/formview/5c48821bfc918f0bcc2c2f5a',\n    'http://koudaigou.net/web/formview/5c488228fc918f0bcc2c2f66',\n    'https://biaodan100.com/web/formview/5c4537e8fc918f0bcc22d03e',\n    'https://biaodan.info/web/formview/5c46a6fefc918f0bcc25f638',\n    'https://biaodan.info/web/formview/5c45387afc918f0bcc22d1bf'\n  ],\n  yelp: [\n    'http://yingkebao.top/web/formview/5c486b28fc918f0bcc2c113d',\n    'http://koudaigou.net/web/formview/5c488188fc918f0bcc2c2ecf',\n    'http://koudaigou.net/web/formview/5c48818bfc918f0bcc2c2ed2',\n    'http://koudaigou.net/web/formview/5c48818dfc918f0bcc2c2ed8',\n    'http://yingkebao.top/web/formview/5c488190fc918f0bcc2c2eda',\n    'http://yingkebao.top/web/formview/5c4881a2fc918f0bcc2c2eed',\n    'https://biaodan100.com/web/formview/5c439cacfc918f0bcc205db2',\n    'https://biaodan100.com/web/formview/5c4727bbfc918f0bcc27b186',\n    'https://biaodan100.com/web/formview/5c453844fc918f0bcc22d133'\n  ]\n}\n\nexport const getSurvey = (dataset, scenario) => {\n  return surveys[dataset][scenario];\n}\n\nexport default {\n  getSurvey,\n  surveys\n};\n","import React, { PureComponent } from 'react';\n// import PropTypes from 'prop-types';\nimport qs from 'query-string';\nimport {\n  Card,\n  notification,\n  Button,\n  Icon,\n  Row,\n  Col,\n  Alert,\n  Steps\n} from 'antd';\n\nimport QuestionList from './QuestionList';\nimport ItemList from './ItemList';\nimport ContextModal from './ContextModal';\nimport SurveyModal from './SurveyModal';\n\nimport userTree from '../lib/user';\nimport itemTree from '../lib/item';\nimport scenarios from '../lib/scenarios';\nimport { getSurvey } from '../lib/surveys';\n\nimport styles from './index.module.css';\n\nconst ITEM_NUM = 5;\n\nclass Main extends PureComponent {\n  state = {\n    userNodes: [],\n    itemNodes: [],\n    context: null,\n    survey: null,\n    expExpanded: false,\n    step: -1,\n    stepEnd: false\n  }\n\n  componentDidMount() {\n    this.setContext();\n  }\n\n  setContext = () => {\n    let {dataset, scenario} = qs.parse(window.location.search);\n\n    if (this.verifyContext(dataset, scenario)) {\n      scenario = Number(scenario);\n\n      this.setState({\n        context: {dataset, scenario}\n      }, () => {\n        this.resetStepContext(0);\n        this.showWarning();\n        this.startTime = new Date();\n      });\n    }\n  }\n\n  verifyContext = (dataset, scenario) => {\n    if (!['amazon', 'yelp'].includes(dataset)) return false;\n    if (!scenario || !scenarios[Number(scenario)]) return false;\n    return true;\n  }\n\n  onContextSubmit = context => {\n    window.history.pushState({}, null, '?' + qs.stringify(context));\n    this.setContext();\n  }\n\n  resetStepContext = (step) => {\n    const { dataset, scenario } = this.state.context;\n\n    const { model, random } = scenarios[scenario][step];\n\n    userTree.setContext(dataset, model);\n    itemTree.setContext(dataset, model, random);\n\n    this.setState({\n      userNodes: [userTree.getRoot()],\n      itemNodes: [],\n      step,\n      stepEnd: false\n    });\n  }\n\n  onSubmit = (nodeId, value) => {\n    const newNode = userTree.nextNode(nodeId, value);\n    const { userNodes } = this.state;\n\n    userNodes[userNodes.length - 1] = {\n      ...userNodes[userNodes.length - 1],\n      submitted: true\n    };\n\n    this.setState({\n      userNodes: newNode.isLeaf ? [...userNodes] : [...userNodes, newNode],\n      itemNodes: itemTree.getTopKItems(newNode.vector, ITEM_NUM)\n    });\n\n    if (newNode.isLeaf) {\n      this.showNotification();\n      this.setState({\n        stepEnd: true\n      })\n    }\n  }\n\n  onExpExpand = () => {\n    if (this.state.expExpanded) return;\n    this.setState({ expExpanded: true });\n  }\n\n  getSteps = () => {\n    const { context } = this.state;\n    const { scenario } = context || {};\n    return scenarios[scenario] || [];\n  }\n\n  onFinishStep = () => {\n    const { context, expExpanded, step } = this.state;\n    const steps = this.getSteps();\n\n    if (step !== steps.length - 1) {\n      // clear question's inner state\n      this.setState({\n        userNodes: [],\n      }, () => {\n        this.resetStepContext(step + 1);\n      });\n      return;\n    }\n\n    const { dataset, scenario } = context;\n\n    const lastEnough = ((new Date()) - this.startTime) > 20000;\n    // const expChecked = expExpanded;\n\n    let survey = null;\n    if (lastEnough) {\n      survey = getSurvey(dataset, scenario);\n    }\n\n    this.setState({\n      step: step + 1,\n      survey\n    });\n  }\n\n  showNotification = () => {\n    const config = {\n      duration: 10,\n      message: 'Congratulation!',\n      description: 'You have answered all questions. Now please review our final recommendations customized for you. Then click the \"Finish\" button in the banner to next step.'\n    };\n\n    notification.success(config);\n  }\n\n  showWarning = () => {\n    notification.warning({\n      duration: 10,\n      message: 'Attention',\n      description: 'Please rate each feature according to your preference. Your behavior on this page will be recorded, and no token will be given to acquire reward on MTurk if you just randomly assign scores. Thanks!'\n    });\n  }\n\n  render() {\n    const { userNodes, itemNodes, context, survey, step, stepEnd } = this.state;\n    const steps = this.getSteps();\n\n    return (\n      <>\n        {\n          Boolean(steps.length) && (\n            <Steps current={step} style={{marginBottom: 24}}>\n              {\n                steps.map((_, idx) =>\n                  <Steps.Step key={idx} title={'System ' + String.fromCharCode(65 + idx)} />\n                )\n              }\n              <Steps.Step title=\"End\" />\n            </Steps>\n          )\n        }\n\n        {\n          stepEnd &&\n            <Alert\n              message=\"Finish this step\"\n              description={(\n                <>\n                  Click the <Button type=\"danger\" onClick={this.onFinishStep}>Finish</Button> to end if you have reviewed the results. Please notice You cannot go back after clicking it.\n                </>\n              )}\n              type=\"info\"\n              showIcon\n              style={{marginBottom: 24}}\n            />\n        }\n\n        <Row gutter={24}>\n          <Col xs={24} sm={24} md={24} lg={9} xl={7}>\n            <Card title={(<><Icon type=\"question\" className={styles.icon} />Questions</>)} style={{marginBottom: 16}}>\n              <QuestionList questions={userNodes} onSubmit={this.onSubmit} />\n            </Card>\n          </Col>\n\n          <Col xs={24} sm={24} md={24} lg={15} xl={17}>\n            <Card title={(<><Icon type=\"heart\" className={styles.icon} />Recommendations</>)}>\n              <ItemList items={itemNodes} onExpand={this.onExpExpand} />\n            </Card>\n          </Col>\n        </Row>\n\n        <ContextModal visible={!Boolean(context)} onSubmit={this.onContextSubmit} />\n        <SurveyModal visible={step === steps.length} survey={survey} />\n      </>\n    );\n  }\n}\n\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Layout, Icon } from 'antd';\nimport shortid from 'shortid';\n\nimport Main from './Main';\n\nimport styles from './App.module.css';\n\nconst { Header, Content, Footer } = Layout;\n\nconst id = shortid.generate();\n\nclass App extends Component {\n  render() {\n\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className={styles.profile}><Icon type=\"user\" /> {id}</div>\n          <span className={styles.logo}>Explanation Recommendation System</span>\n        </Header>\n        <Content className={styles.content}>\n          <Main onEnd={this.onEnd} />\n        </Content>\n        <Footer className={styles.footer}>\n          <a href=\"http://www.cs.virginia.edu/~hw5x/HCDM/\">\n            Human-Centric Data Mining Group\n          </a>\n          &nbsp;@ UVa\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'antd/dist/antd.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}