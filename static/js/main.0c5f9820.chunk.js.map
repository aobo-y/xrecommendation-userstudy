{"version":3,"sources":["App.module.css","Main/InputSlider.module.css","Main/index.module.css","Main/InputSlider.js","Main/QuestionItem.js","Main/QuestionList.js","Main/ItemList.js","lib/user.js","lib/item.js","Main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","logo","content","footer","profile","wrapper","row","icon","InputSlider","react_default","a","createElement","className","styles","gutter","col","span","type","slider","this","props","input_number","Component","defaultProps","min","max","value","QuestionItem","state","submitted","onChange","_this","setState","onConfirm","onSubmit","onUnknown","_this$props","id","feature","Fragment","Main_InputSlider","es_button","onClick","style","marginLeft","PureComponent","QuestionList","questions","list","itemLayout","size","dataSource","renderItem","question","idx","Item","key","Main_QuestionItem","v","IconText","_ref","text","exp","tooltip","title","concat","join","placement","trigger","marginRight","renderEmpty","empty","description","ItemList","items","config_provider","length","item","name","actions","ItemList_IconText","Meta","tags","map","tag","es_tag","color","marginBottom","getNodeById","nodes","user","root","nextNode","nodeId","nextId","node","splitValue","gtId","nGtId","unknownId","itemVectors","math","matrix","itemVectorsData","getNode","itemNodes","lib_item","getTopKItems","vector","k","idxResult","multiply","toArray","queue","TinyQueue","b","pop","itemList","parentId","push","Object","objectSpread","ITEM_NUM","Main","userNodes","userTree","newNode","isLeaf","toConsumableArray","itemTree","showNotification","notification","success","duration","message","btn","href","target","onClose","onEnd","_this$state","xs","sm","md","lg","xl","card","Main_QuestionList","Main_ItemList","Header","Layout","Content","Footer","shortid","generate","App","end","layout","es_alert","banner","src_Main","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.0c5f9820.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"App_logo__2gEk3\",\"content\":\"App_content__1N2fh\",\"footer\":\"App_footer__3LziQ\",\"profile\":\"App_profile__3Rfue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"InputSlider_wrapper__29nA0\",\"row\":\"InputSlider_row__3mS7M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Main_icon__3vwkU\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Slider, Row, Col, InputNumber, Icon } from 'antd';\n\nimport styles from './InputSlider.module.css';\n\nclass InputSlider extends Component {\n  static propTypes = {\n    min: PropTypes.number,\n    max: PropTypes.number,\n    value: PropTypes.number,\n    onChange: PropTypes.func.isRequired\n  }\n\n  static defaultProps = {\n    min: 1,\n    max: 100,\n    value: 50\n  }\n\n  render() {\n    return (\n      <Row className={styles.row} gutter={16}>\n        <Col span={14}>\n          <div className={styles.wrapper}>\n            <Icon type=\"frown-o\" />\n            <Slider\n              {...this.props}\n            />\n            <Icon type=\"smile-o\" />\n          </div>\n        </Col>\n        <Col span={10}>\n          <InputNumber\n            {...this.props}\n          />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default InputSlider;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\n\nimport InputSlider from './InputSlider';\n\n\nclass QuestionItem extends PureComponent {\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    feature: PropTypes.string.isRequired,\n    submitted: PropTypes.bool,\n    onSubmit: PropTypes.func\n  }\n\n  static defaultProps = {\n    submitted: false\n  }\n\n  state = {\n    value: 50,\n    submitted: false\n  }\n\n  onChange = (value) => {\n    this.setState({\n      value: value,\n    });\n  }\n\n  onConfirm = () => {\n    this.props.onSubmit(this.state.value);\n  }\n\n  onUnknown = () => {\n    this.setState({\n      value: -1\n    });\n    this.props.onSubmit(-1);\n  }\n\n  render() {\n    const {id, feature, submitted } = this.props;\n    const { value } = this.state;\n\n    return (\n      <>\n        <p>Q{id}. How much do you like <strong>{feature}</strong>?</p>\n        {\n          submitted ? (\n            <p>Answer: <strong>{value < 0 ? 'Don\\'t know' : value}</strong></p>\n          ) : (\n            <>\n              <InputSlider value={value} onChange={this.onChange} />\n              <Button type=\"primary\" onClick={this.onConfirm}>Confirm</Button>\n              <Button style={{marginLeft: 10}} onClick={this.onUnknown}>I don't Know</Button>\n            </>\n          )\n\n        }\n      </>\n    );\n  }\n}\n\nexport default QuestionItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { List } from 'antd';\n\nimport QuestionItem from './QuestionItem';\n\nclass QuestionList extends Component {\n  static propTypes = {\n    questions: PropTypes.arrayOf(PropTypes.object),\n    onSubmit: PropTypes.func.isRequired\n  }\n\n  render() {\n    const { questions, onSubmit } = this.props;\n\n    return (\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        dataSource={questions}\n        renderItem={(question, idx) => (\n          <List.Item key={question.id}>\n            {\n              question.submitted ?\n                <QuestionItem id={idx + 1} feature={question.feature} submitted /> :\n                <QuestionItem id={idx + 1} feature={question.feature} onSubmit={v => onSubmit(question.id, v)} />\n            }\n          </List.Item>\n        )}\n      />\n    );\n  }\n}\n\nexport default QuestionList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { List, Tag, Icon, Tooltip, Empty, ConfigProvider } from 'antd';\n\nconst IconText = ({ type, text, exp }) => (\n  <Tooltip\n    title={`From your history, we think you will like the features ${exp.join(', ')} of this restaurant.`}\n    placement=\"bottomLeft\"\n    trigger={['hover', 'click', 'focus']}\n  >\n    <span>\n      <Icon type={type} style={{ marginRight: 8 }} />\n      {text}\n    </span>\n  </Tooltip>\n);\n\nconst renderEmpty = () => <Empty description=\"Please answer the questions first...\" />\n\nclass ItemList extends Component {\n  static propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object)\n  }\n\n  render() {\n    const { items } = this.props;\n\n    return (\n      <ConfigProvider renderEmpty={renderEmpty}>\n        <List\n          itemLayout=\"vertical\"\n          size=\"large\"\n          dataSource={items}\n          footer={<div><b>{items.length}</b> items</div>}\n          renderItem={item => (\n            <List.Item\n              key={item.name}\n              actions={[<IconText type=\"solution\" text=\"Explanation\" exp={item.exp} />]}\n            >\n              <List.Item.Meta\n                title={item.name}\n              />\n              {\n                item.tags.map((tag, idx) =>\n                  <Tag key={idx} color=\"blue\" style={{marginBottom: 6}}>\n                    {tag}\n                  </Tag>\n                )\n              }\n            </List.Item>\n          )}\n        />\n      </ConfigProvider>\n    );\n  }\n}\n\nexport default ItemList;\n","import nodes from '../data/user_nodes.json';\n\n// NodeId starts from 1\nconst getNodeById = id => nodes[id - 1]\n\n\nexport const root = nodes[0];\n\nexport const nextNode = (nodeId, value) => {\n  const node = getNodeById(nodeId);\n  const { splitValue, gtId, nGtId }  = node;\n\n  let nextId;\n  if (value < 0) {\n    nextId = node.unknownId;\n  } else {\n    nextId = value > splitValue ? gtId : nGtId;\n  }\n  const nextNode = getNodeById(nextId);\n\n  return nextNode;\n}\n\nexport default {\n  root,\n  nextNode\n};\n\n","import math from 'mathjs';\nimport TinyQueue from 'tinyqueue';\n\nimport itemVectorsData from '../data/item_vector';\nimport itemList from '../data/item_list';\nimport itemNodes from '../data/item_nodes';\n\nconst itemVectors = math.matrix(itemVectorsData);\n\nconst getNode = id => itemNodes[id - 1];\n\nexport const getTopKItems = (vector, k) => {\n  const result = math.multiply(itemVectors, vector).toArray();\n\n  const idxResult = result.map((value, idx) => {\n    return {\n      value,\n      idx\n    };\n  });\n\n  const queue = new TinyQueue(idxResult, (a, b) => {\n    return b.value - a.value;\n  });\n\n  const items = [];\n  while (items.length < k) {\n    const { idx } = queue.pop();\n    const item = itemList[idx];\n\n    const exp = [];\n    let node = getNode(item.parentId);\n    while(node) {\n      if (node.feature) {\n        exp.push(node.feature);\n      }\n      node = node.parentId < 0 ? null : getNode(node.parentId);\n    }\n\n    items.push({\n      id: idx,\n      ...item,\n      exp\n    });\n  }\n\n  return items;\n};\n\nexport default {\n  getTopKItems\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport {\n  Card,\n  notification,\n  Button,\n  Icon,\n  Row,\n  Col\n} from 'antd';\n\nimport QuestionList from './QuestionList';\nimport ItemList from './ItemList';\n\nimport userTree from '../lib/user';\nimport itemTree from '../lib/item';\n\nimport styles from './index.module.css';\n\nconst ITEM_NUM = 5;\n\nclass Main extends PureComponent {\n  static propTypes = {\n    onEnd: PropTypes.func.isRequired\n  }\n\n  state = {\n    userNodes: [userTree.root],\n    itemNodes: []\n  }\n\n  onSubmit = (nodeId, value) => {\n    const newNode = userTree.nextNode(nodeId, value);\n    const { userNodes } = this.state;\n\n    userNodes[userNodes.length - 1].submitted = true;\n    this.setState({\n      userNodes: newNode.isLeaf ? [...userNodes] : [...userNodes, newNode],\n      itemNodes: itemTree.getTopKItems(newNode.vector, ITEM_NUM)\n    });\n\n    if (newNode.isLeaf) {\n      this.showNotification();\n    }\n  }\n\n  showNotification = () => {\n    notification.success({\n      duration: 0,\n      message: 'Congratulation!',\n      description: 'You have answered all questions. Now you can review our final recommendations customized for you. Please follow the button below to tell us how you feel about this experience.',\n      btn: (\n        <Button type=\"primary\" href=\"http://www.cs.virginia.edu/~hw5x/HCDM/\" target=\"_blank\">\n          Survey\n        </Button>\n      ),\n      onClose: this.props.onEnd\n    })\n  }\n\n  render() {\n    const { userNodes, itemNodes } = this.state;\n\n    return (\n      <Row gutter={24}>\n        <Col xs={24} sm={24} md={24} lg={9} xl={7}>\n          <Card title={(<><Icon type=\"question\" className={styles.icon} />Questions</>)} style={{marginBottom: 16}}>\n            <QuestionList questions={userNodes} onSubmit={this.onSubmit} />\n          </Card>\n        </Col>\n\n        <Col xs={24} sm={24} md={24} lg={15} xl={17}>\n          <Card title={(<><Icon type=\"heart\" className={styles.icon} />Recommendations</>)}>\n            <ItemList items={itemNodes} />\n          </Card>\n        </Col>\n      </Row>\n    );\n  }\n}\n\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Layout, Icon, Alert } from 'antd';\nimport shortid from 'shortid';\n\nimport Main from './Main';\n\nimport styles from './App.module.css';\n\nconst { Header, Content, Footer } = Layout;\n\nconst id = shortid.generate();\n\nclass App extends Component {\n  state = {\n    end: false\n  }\n\n  onEnd = () => {\n    this.setState({end: true});\n  }\n\n  render() {\n    const { end } = this.state;\n\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className={styles.profile}><Icon type=\"user\" /> {id}</div>\n          <span className={styles.logo}>Explanation Recommendation System</span>\n        </Header>\n        {end &&\n          <Alert\n            message=\"Successfully Completed\"\n            description={<>Please follow this link to the <a href=\"http://www.cs.virginia.edu/~hw5x/HCDM/\">survey</a>.</>}\n            type=\"success\"\n            banner\n          />\n        }\n        <Content className={styles.content}>\n          <Main onEnd={this.onEnd} />\n        </Content>\n        <Footer className={styles.footer}>\n          <a href=\"http://www.cs.virginia.edu/~hw5x/HCDM/\">\n            Human-Centric Data Mining Group\n          </a>\n          &nbsp;@ UVa\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'antd/dist/antd.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}