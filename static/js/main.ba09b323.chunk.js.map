{"version":3,"sources":["App.module.css","Main/InputSlider.module.css","Main/index.module.css","Main/InputSlider.js","Main/QuestionItem.js","lib/user.js","lib/item.js","Main/QuestionList.js","Main/ItemList.js","Main/ContextModal.js","lib/surveys.js","Main/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","logo","content","footer","profile","wrapper","row","icon","InputSlider","react_default","a","createElement","className","styles","gutter","col","span","type","slider","this","props","input_number","Component","defaultProps","min","max","value","SliderAnswer","_ref","submitted","onChange","onConfirm","onUnknown","Fragment","Main_InputSlider","es_button","onClick","style","marginLeft","RadioAnswer","_ref2","answer","onLike","onDislike","QuestionItem","state","_this","setState","onSubmit","_this$props","id","feature","splitValue","question","concat","QuestionItem_SliderAnswer","QuestionItem_RadioAnswer","PureComponent","nodes","itemList","itemNodes","itemVectors","QuestionList","questions","list","itemLayout","size","dataSource","rowKey","renderItem","idx","Item","Main_QuestionItem","v","renderEmpty","empty","description","ItemList","items","config_provider","length","item","Meta","title","href","target","rel","name","tags","map","tag","es_tag","key","color","marginBottom","Boolean","exp","collapse","defaultActiveKey","bordered","Panel","header","marginRight","border","join","ContextModal","dataset","model","onDatasetChange","e","onModelChange","Object","objectSpread","visible","_this$state","modal","closable","es_form","label","es_radio","Group","Button","allNodes","amazon","fMf","MFCT","yelp","getNodeById","user","setContext","set","getRoot","nextNode","nodeId","nextId","node","_node$splitValue","gtId","nGtId","unknownId","allData","vectors","amazonFmfVectorsData","amazonMFCTVectorsData","amazonList","getNode","lib_item","math","matrix","getTopKItems","vector","k","idxResult","multiply","toArray","queue","TinyQueue","b","pop","parentId","push","surveys","ITEM_NUM","Main","userNodes","context","survey","_qs$parse","qs","parse","window","location","search","userTree","itemTree","showWarning","startTime","Date","onContextSubmit","history","pushState","stringify","newNode","isLeaf","toConsumableArray","showSurvey","showNotification","config","duration","message","onClose","onEnd","btn","notification","success","warning","xs","sm","md","lg","xl","card","Main_QuestionList","Main_ItemList","Main_ContextModal","Header","Layout","Content","Footer","shortid","generate","App","end","layout","es_alert","banner","src_Main","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ba09b323.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"App_logo__2gEk3\",\"content\":\"App_content__1N2fh\",\"footer\":\"App_footer__3LziQ\",\"profile\":\"App_profile__3Rfue\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"InputSlider_wrapper__29nA0\",\"row\":\"InputSlider_row__3mS7M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"Main_icon__3vwkU\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Slider, Row, Col, InputNumber, Icon } from 'antd';\n\nimport styles from './InputSlider.module.css';\n\nclass InputSlider extends Component {\n  static propTypes = {\n    min: PropTypes.number,\n    max: PropTypes.number,\n    value: PropTypes.number,\n    onChange: PropTypes.func.isRequired\n  }\n\n  static defaultProps = {\n    min: 1,\n    max: 100,\n    value: 50\n  }\n\n  render() {\n    return (\n      <Row className={styles.row} gutter={16}>\n        <Col span={14}>\n          <div className={styles.wrapper}>\n            <Icon type=\"frown-o\" />\n            <Slider\n              {...this.props}\n            />\n            <Icon type=\"smile-o\" />\n          </div>\n        </Col>\n        <Col span={10}>\n          <InputNumber\n            {...this.props}\n          />\n        </Col>\n      </Row>\n    );\n  }\n}\n\nexport default InputSlider;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from 'antd';\n\nimport InputSlider from './InputSlider';\n\nconst SliderAnswer = ({\n  value,\n  submitted,\n  onChange,\n  onConfirm,\n  onUnknown\n}) => {\n  if (submitted) {\n    return <p>Answer: <strong>{value < 0 ? 'Don\\'t know' : value}</strong></p>\n  }\n\n  return (\n    <>\n      <InputSlider value={value} onChange={onChange} />\n      <Button type=\"primary\" onClick={onConfirm}>Confirm</Button>\n      <Button style={{marginLeft: 10}} onClick={onUnknown}>I don't Know</Button>\n    </>\n  );\n}\n\n\nconst RadioAnswer = ({\n  value,\n  submitted,\n  onLike,\n  onDislike,\n  onUnknown\n}) => {\n  if (submitted) {\n    let answer;\n    if (value === 0) {\n      answer = 'Dislike';\n    } else if (value > 0) {\n      answer = 'Like';\n    } else {\n      answer = 'Don\\'t know';\n    }\n\n    return <p>Answer: <strong>{answer}</strong></p>\n   }\n\n   return (\n    <>\n      <Button type=\"primary\" onClick={onLike}>Like</Button>\n      <Button type=\"primary\" style={{marginLeft: 10}} onClick={onDislike}>Dislike</Button>\n      <Button style={{marginLeft: 10}} onClick={onUnknown}>I don't Know</Button>\n    </>\n  );\n}\n\nclass QuestionItem extends PureComponent {\n  static propTypes = {\n    id: PropTypes.number.isRequired,\n    feature: PropTypes.string.isRequired,\n    question: PropTypes.string,\n    splitValue: PropTypes.number,\n    submitted: PropTypes.bool,\n    onSubmit: PropTypes.func\n  }\n\n  static defaultProps = {\n    question: null,\n    splitValue: null,\n    submitted: false\n  }\n\n  state = {\n    value: 50,\n    submitted: false\n  }\n\n  onChange = (value) => {\n    this.setState({\n      value: value,\n    });\n  }\n\n  onConfirm = () => {\n    this.props.onSubmit(this.state.value);\n  }\n\n  onUnknown = () => {\n    this.setState({\n      value: -1\n    });\n    this.props.onSubmit(-1);\n  }\n\n  onLike = () => {\n    this.setState({\n      value: 100\n    });\n    this.props.onSubmit(100);\n  }\n\n  onDislike = () => {\n    this.setState({\n      value: 0\n    });\n    this.props.onSubmit(0);\n  }\n\n  render() {\n    const {id, feature, submitted, splitValue, question} = this.props;\n    const { value } = this.state;\n\n    return (\n      <>\n        <p>Q{id}. {question || `How much do you like ${feature}?`}</p>\n        {\n          splitValue ?\n            <SliderAnswer\n              value={value}\n              submitted={submitted}\n              onChange={this.onChange}\n              onConfirm={this.onConfirm}\n              onUnknown={this.onUnknown}\n            /> :\n            <RadioAnswer\n              value={value}\n              submitted={submitted}\n              onLike={this.onLike}\n              onDislike={this.onDislike}\n              onUnknown={this.onUnknown}\n            />\n        }\n      </>\n    );\n  }\n}\n\nexport default QuestionItem;\n","import amazonFmfNodes from '../data/amazon/fMf/user_nodes.json';\nimport amazonMfctNodes from '../data/amazon/MFCT/user_nodes.json';\n\nconst allNodes = {\n  amazon: {\n    fMf: amazonFmfNodes,\n    MFCT: amazonMfctNodes\n  },\n\n  yelp: {\n\n  }\n};\n\n\nlet nodes;\n\nconst setContext = (set, model) => { nodes = allNodes[set][model] };\n\n// NodeId starts from 1\nconst getNodeById = id => nodes[id - 1]\n\n\nexport const getRoot = () => nodes[0];\n\nexport const nextNode = (nodeId, value) => {\n  const node = getNodeById(nodeId);\n  const { splitValue = 50, gtId, nGtId }  = node;\n\n  let nextId;\n  if (value < 0) {\n    nextId = node.unknownId;\n  } else {\n    nextId = value > splitValue ? gtId : nGtId;\n  }\n  const nextNode = getNodeById(nextId);\n\n  return nextNode;\n}\n\nexport default {\n  setContext,\n\n  getRoot,\n  nextNode\n};\n\n","import math from 'mathjs';\nimport TinyQueue from 'tinyqueue';\n\nimport amazonList from '../data/amazon/item_list';\nimport amazonFmfVectorsData from '../data/amazon/fMf/item_vectors';\nimport amazonMFCTVectorsData from '../data/amazon/MFCT/item_vectors';\nimport amazonMFCTNodes from '../data/amazon/MFCT/item_nodes';\n\nconst allData = {\n  amazon: {\n    fMf: {vectors: amazonFmfVectorsData},\n    MFCT: {\n      nodes: amazonMFCTNodes,\n      vectors: amazonMFCTVectorsData\n    },\n\n    list: amazonList\n  },\n  yelp: {}\n}\n\nlet itemList;\nlet itemNodes;\nlet itemVectors;\n\nconst setContext = (set, model) => {\n  itemList = allData[set].list;\n  itemNodes = allData[set][model].nodes;\n  itemVectors = math.matrix(allData[set][model].vectors);\n}\n\nconst getNode = id => itemNodes ? itemNodes[id - 1] : null;\n\nexport const getTopKItems = (vector, k) => {\n  const result = math.multiply(itemVectors, vector).toArray();\n\n  const idxResult = result.map((value, idx) => {\n    return {\n      value,\n      idx\n    };\n  });\n\n  const queue = new TinyQueue(idxResult, (a, b) => {\n    return b.value - a.value;\n  });\n\n  const items = [];\n  while (items.length < k) {\n    const { idx } = queue.pop();\n    const item = itemList[idx];\n\n    const exp = [];\n    let node = getNode(item.parentId);\n\n    while(node) {\n      if (node.feature) {\n        exp.push(node.feature);\n      }\n      node = node.parentId < 0 ? null : getNode(node.parentId);\n    }\n\n    items.push({\n      id: idx,\n      ...item,\n      exp\n    });\n  }\n\n  return items;\n};\n\nexport default {\n  setContext,\n\n  getTopKItems\n};\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { List } from 'antd';\n\nimport QuestionItem from './QuestionItem';\n\nclass QuestionList extends PureComponent {\n  static propTypes = {\n    questions: PropTypes.arrayOf(PropTypes.object),\n    onSubmit: PropTypes.func.isRequired\n  }\n\n  render() {\n    const { questions, onSubmit } = this.props;\n\n    return (\n      <List\n        itemLayout=\"vertical\"\n        size=\"large\"\n        dataSource={questions}\n        rowKey=\"id\"\n        renderItem={(question, idx) => (\n          <List.Item>\n            <QuestionItem\n              id={idx + 1}\n              feature={question.feature}\n              question={question.question}\n              splitValue={question.splitValue}\n              submitted={question.submitted}\n              onSubmit={question.submitted ? null : v => onSubmit(question.id, v)}\n            />\n          </List.Item>\n        )}\n      />\n    );\n  }\n}\n\nexport default QuestionList;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { List, Tag, Icon, Collapse, Empty, ConfigProvider } from 'antd';\n\n\nconst renderEmpty = () => <Empty description=\"Please answer the questions first...\" />\n\nclass ItemList extends Component {\n  static propTypes = {\n    items: PropTypes.arrayOf(PropTypes.object)\n  }\n\n  render() {\n    const { items } = this.props;\n\n    return (\n      <ConfigProvider renderEmpty={renderEmpty}>\n        <List\n          itemLayout=\"vertical\"\n          size=\"large\"\n          dataSource={items}\n          footer={<div><b>{items.length}</b> items</div>}\n          rowKey={item => item.id}\n          renderItem={item => (\n            <List.Item>\n              <List.Item.Meta\n                title={\n                  <a href={`https://www.amazon.com/gp/product/${item.id}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {item.name}\n                  </a>\n                }\n              />\n              {\n                item.tags.map((tag, idx) =>\n                  <Tag key={idx} color=\"blue\" style={{marginBottom: 6}}>\n                    {tag}\n                  </Tag>\n                )\n              }\n              {\n                Boolean(item.exp.length) && (\n                  <Collapse defaultActiveKey={[]} bordered={false} >\n                    <Collapse.Panel\n                      key=\"1\"\n                      header={<><Icon type=\"solution\" style={{ marginRight: 8 }} />Explanation</>}\n                      style={{border: 0}}\n                    >\n                      <p>{`From your history, we think you will like the features ${item.exp.join(', ')}`}</p>\n                    </Collapse.Panel>\n                  </Collapse>\n                )\n              }\n            </List.Item>\n          )}\n        />\n      </ConfigProvider>\n    );\n  }\n}\n\nexport default ItemList;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  Modal, Form, Radio, Button\n} from 'antd';\n\nclass ContextModal extends PureComponent {\n  static propTypes = {\n    visible: PropTypes.bool.isRequired,\n    onSubmit: PropTypes.func.isRequired\n  }\n\n  state = {\n    dataset: 'amazon',\n    model: 'MFCT'\n  }\n\n  onDatasetChange = e => {\n    this.setState({ dataset: e.target.value });\n  }\n\n  onModelChange = e => {\n    this.setState({ model: e.target.value });\n  }\n\n  onSubmit = () => {\n    this.props.onSubmit({...this.state});\n  }\n\n  render() {\n    const { visible } = this.props;\n    const { dataset, model } = this.state;\n\n    return (\n      <Modal\n        title=\"Choose Context\"\n        visible={visible}\n        footer={null}\n        closable={false}\n      >\n        <Form>\n          <Form.Item\n            label=\"Dataset\"\n          >\n            <Radio.Group value={dataset} onChange={this.onDatasetChange}>\n              <Radio.Button value=\"amazon\">Amazon</Radio.Button>\n              {/* <Radio.Button value=\"yelp\">Yelp</Radio.Button> */}\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item\n            label=\"Model\"\n          >\n            <Radio.Group value={model} onChange={this.onModelChange}>\n              <Radio.Button value=\"fMf\">fMf</Radio.Button>\n              <Radio.Button value=\"MFCT\">MFCT</Radio.Button>\n            </Radio.Group>\n          </Form.Item>\n\n          <Form.Item>\n            <Button type=\"primary\" onClick={this.onSubmit}>Submit</Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    );\n  }\n}\n\nexport default ContextModal;\n","const surveys = {\n  amazon: {\n    fMf: 'http://yingkebao.top/web/formview/5c45387afc918f0bcc22d1bf',\n    MFCT: 'http://yingkebao.top/web/formview/5c4537e8fc918f0bcc22d03e'\n  },\n  yelp: {\n    fMf: 'http://koudaigou.net/web/formview/5c453844fc918f0bcc22d133',\n    MFCT: 'http://koudaigou.net/web/formview/5c439cacfc918f0bcc205db2'\n  }\n}\n\nexport default surveys;\n","import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport qs from 'query-string';\nimport {\n  Card,\n  notification,\n  Button,\n  Icon,\n  Row,\n  Col\n} from 'antd';\n\nimport QuestionList from './QuestionList';\nimport ItemList from './ItemList';\nimport ContextModal from './ContextModal';\n\nimport userTree from '../lib/user';\nimport itemTree from '../lib/item';\nimport surveys from '../lib/surveys';\n\nimport styles from './index.module.css';\n\nconst ITEM_NUM = 5;\n\nclass Main extends PureComponent {\n  static propTypes = {\n    onEnd: PropTypes.func.isRequired\n  }\n\n  state = {\n    userNodes: [],\n    itemNodes: [],\n    context: null,\n    survey: null\n  }\n\n  componentDidMount() {\n    this.setContext();\n  }\n\n  setContext = () => {\n    const {dataset, model} = qs.parse(window.location.search);\n\n    if (dataset && model) {\n      userTree.setContext(dataset, model);\n      itemTree.setContext(dataset, model);\n\n      this.setState({\n        userNodes: [userTree.getRoot()],\n        context: {dataset, model},\n        survey: surveys[dataset][model]\n      });\n\n      this.showWarning();\n      this.startTime = new Date();\n    }\n  }\n\n  onContextSubmit = context => {\n    window.history.pushState({}, null, '?' + qs.stringify(context));\n    this.setContext();\n  }\n\n  onSubmit = (nodeId, value) => {\n    const newNode = userTree.nextNode(nodeId, value);\n    const { userNodes } = this.state;\n\n    userNodes[userNodes.length - 1].submitted = true;\n    this.setState({\n      userNodes: newNode.isLeaf ? [...userNodes] : [...userNodes, newNode],\n      itemNodes: itemTree.getTopKItems(newNode.vector, ITEM_NUM)\n    });\n\n    if (newNode.isLeaf) {\n      const showSurvey = ((new Date()) - this.startTime) > 20000;\n      this.showNotification(showSurvey);\n    }\n  }\n\n  showNotification = (showSurvey) => {\n    const config = {\n      duration: 0,\n      message: 'Congratulation!',\n      description: 'You have answered all questions. Now you can review our final recommendations customized for you.',\n      onClose: () => this.props.onEnd(showSurvey ? this.state.survey : null)\n    };\n\n    if (showSurvey) {\n      config.btn = (\n        <Button type=\"primary\" href={this.state.survey} target=\"_blank\" rel=\"noopener noreferrer\">\n          Survey\n        </Button>\n      );\n\n      config.description += ' Please follow the button below to tell us how you feel about this experience.';\n    }\n\n    notification.success(config);\n  }\n\n  showWarning = () => {\n    notification.warning({\n      duration: 10,\n      message: 'Attention',\n      description: 'Please rate each feature according to your preference. Your behavior on this page will be recorded, and no token will be given to acquire reward on MTurk if you just randomly assign scores. Thanks!'\n    });\n  }\n\n  render() {\n    const { userNodes, itemNodes, context } = this.state;\n\n    return (\n      <>\n        <Row gutter={24}>\n          <Col xs={24} sm={24} md={24} lg={9} xl={7}>\n            <Card title={(<><Icon type=\"question\" className={styles.icon} />Questions</>)} style={{marginBottom: 16}}>\n              <QuestionList questions={userNodes} onSubmit={this.onSubmit} />\n            </Card>\n          </Col>\n\n          <Col xs={24} sm={24} md={24} lg={15} xl={17}>\n            <Card title={(<><Icon type=\"heart\" className={styles.icon} />Recommendations</>)}>\n              <ItemList items={itemNodes} />\n            </Card>\n          </Col>\n        </Row>\n\n        <ContextModal visible={!Boolean(context)} onSubmit={this.onContextSubmit} />\n      </>\n    );\n  }\n}\n\n\nexport default Main;\n","import React, { Component } from 'react';\nimport { Layout, Icon, Alert } from 'antd';\nimport shortid from 'shortid';\n\nimport Main from './Main';\n\nimport styles from './App.module.css';\n\nconst { Header, Content, Footer } = Layout;\n\nconst id = shortid.generate();\n\nclass App extends Component {\n  state = {\n    end: false,\n    survey: null\n  }\n\n  onEnd = (survey) => {\n    this.setState({end: true, survey});\n  }\n\n  render() {\n    const { end, survey } = this.state;\n\n    return (\n      <Layout className=\"layout\">\n        <Header>\n          <div className={styles.profile}><Icon type=\"user\" /> {id}</div>\n          <span className={styles.logo}>Explanation Recommendation System</span>\n        </Header>\n        {end &&\n          <Alert\n            message=\"Successfully Completed\"\n            description={survey ? <>Please follow this link to the <a href={survey} target=\"_blank\" rel=\"noopener noreferrer\">survey</a>.</> : ''}\n            type=\"success\"\n            banner\n          />\n        }\n        <Content className={styles.content}>\n          <Main onEnd={this.onEnd} />\n        </Content>\n        <Footer className={styles.footer}>\n          <a href=\"http://www.cs.virginia.edu/~hw5x/HCDM/\">\n            Human-Centric Data Mining Group\n          </a>\n          &nbsp;@ UVa\n        </Footer>\n      </Layout>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'antd/dist/antd.css';\n\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}